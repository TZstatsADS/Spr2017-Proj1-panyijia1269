main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
# Get link URLs
# f.speechlinks is a function for extracting links from the list of speeches.
inaug=f.speechlinks(main.page)
#head(inaug)
as.Date(inaug[,1], format="%B %e, %Y")
inaug=inaug[-nrow(inaug),] # remove the last line, irrelevant due to error.
#### Nomination speeches
main.page=read_html("http://www.presidency.ucsb.edu/nomination.php")
# Get link URLs
nomin <- f.speechlinks(main.page)
#head(nomin)
#
#### Farewell speeches
main.page=read_html("http://www.presidency.ucsb.edu/farewell_addresses.php")
# Get link URLs
farewell <- f.speechlinks(main.page)
#head(farewell)
# load packages
library("rvest")
library("tibble")
library("qdap")
library("sentimentr")
library("gplots")
library("dplyr")
library("tm")
library("syuzhet")
library("factoextra")
library("beeswarm")
library("scales")
library("RColorBrewer")
library("RANN")
library("tm")
library("topicmodels")
source("../lib/plotstacked.R")
source("../lib/speechFuncs.R")
### Inauguaral speeches
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
# Get link URLs
# f.speechlinks is a function for extracting links from the list of speeches.
inaug=f.speechlinks(main.page)
#head(inaug)
as.Date(inaug[,1], format="%B %e, %Y")
inaug=inaug[-nrow(inaug),] # remove the last line, irrelevant due to error.
#### Nomination speeches
main.page=read_html("http://www.presidency.ucsb.edu/nomination.php")
# Get link URLs
nomin <- f.speechlinks(main.page)
#head(nomin)
#
#### Farewell speeches
main.page=read_html("http://www.presidency.ucsb.edu/farewell_addresses.php")
# Get link URLs
farewell <- f.speechlinks(main.page)
#head(farewell)
inaug.list=read.csv("../data/inauglist.csv", stringsAsFactors = FALSE)
nomin.list=read.csv("../data/nominlist.csv", stringsAsFactors = FALSE)
farewell.list=read.csv("../data/farewelllist.csv", stringsAsFactors = FALSE)
speech.list=rbind(inaug.list, nomin.list, farewell.list)
speech.list$type=c(rep("inaug", nrow(inaug.list)),
rep("nomin", nrow(nomin.list)),
rep("farewell", nrow(farewell.list)))
speech.url=rbind(inaug, nomin, farewell)
speech.list=cbind(speech.list, speech.url)
# Loop over each row in speech.list
speech.list$fulltext=NA
for(i in seq(nrow(speech.list))) {
text <- read_html(speech.list$urls[i]) %>% # load the page
html_nodes(".displaytext") %>% # isloate the text
html_text() # get the text
speech.list$fulltext[i]=text
# Create the file name
filename <- paste0("../data/fulltext/",
speech.list$type[i],
speech.list$File[i], "-",
speech.list$Term[i], ".txt")
sink(file = filename) %>% # open file to write
cat(text)  # write the file
sink() # close the file
}
### Inauguaral speeches
main.page <- read_html(x= "http://www.presidency.ucsb.edu/inaugurals.php")
# Get link URLs
# f.speechlinks is a function for extracting links from the list of speeches.
inaug=f.speechlinks(main.page)
#head(inaug)
as.Date(inaug[,1], format="%B %e, %Y")
inaug=inaug[-nrow(inaug),] # remove the last line, irrelevant due to error.
#### Nomination speeches
main.page=read_html("http://www.presidency.ucsb.edu/nomination.php")
# Get link URLs
nomin <- f.speechlinks(main.page)
#head(nomin)
#
#### Farewell speeches
main.page=read_html("http://www.presidency.ucsb.edu/farewell_addresses.php")
# Get link URLs
farewell <- f.speechlinks(main.page)
#head(farewell)
main.page <- read_html(x="http://www.presidency.ucsb.edu/inaugurals.php")
main.page
### Inauguaral speeches
main.page <- read_html(x="http://www.presidency.ucsb.edu/inaugurals.php")
# Get link URLs
# f.speechlinks is a function for extracting links from the list of speeches.
inaug=f.speechlinks(main.page)
#head(inaug)
as.Date(inaug[,1], format="%B %e, %Y")
inaug=inaug[-nrow(inaug),] # remove the last line, irrelevant due to error.
#### Nomination speeches
main.page=read_html(x="http://www.presidency.ucsb.edu/nomination.php")
# Get link URLs
nomin <- f.speechlinks(main.page)
#head(nomin)
#
#### Farewell speeches
main.page=read_html(x="http://www.presidency.ucsb.edu/farewell_addresses.php")
# Get link URLs
farewell <- f.speechlinks(main.page)
#head(farewell)
library(tm)
library(wordcloud)
library(RColorBrewer)
library(dplyr)
library(tidytext)
# load packages
library("rvest")
library("tibble")
library("qdap")
library("sentimentr")
library("gplots")
library("dplyr")
library("tm")
library("syuzhet")
library("factoextra")
library("beeswarm")
library("scales")
library("RColorBrewer")
library("RANN")
library("tm")
library("topicmodels")
source("../lib/plotstacked.R")
source("../lib/speechFuncs.R")
### Inauguaral speeches
main.page <- read_html(x="http://www.presidency.ucsb.edu/inaugurals.php")
# Get link URLs
# f.speechlinks is a function for extracting links from the list of speeches.
inaug=f.speechlinks(main.page)
#head(inaug)
as.Date(inaug[,1], format="%B %e, %Y")
inaug=inaug[-nrow(inaug),] # remove the last line, irrelevant due to error.
#### Nomination speeches
main.page=read_html("http://www.presidency.ucsb.edu/nomination.php")
# Get link URLs
nomin <- f.speechlinks(main.page)
#head(nomin)
#
#### Farewell speeches
main.page=read_html("http://www.presidency.ucsb.edu/farewell_addresses.php")
# Get link URLs
farewell <- f.speechlinks(main.page)
#head(farewell)
# load packages
library("rvest")
library("tibble")
library("qdap")
library("sentimentr")
library("gplots")
library("dplyr")
library("tm")
library("syuzhet")
library("factoextra")
library("beeswarm")
library("scales")
library("RColorBrewer")
library("RANN")
library("tm")
library("topicmodels")
source("../lib/plotstacked.R")
source("../lib/speechFuncs.R")
### Inauguaral speeches
main.page <- read_html(x="http://www.presidency.ucsb.edu/inaugurals.php")
# Get link URLs
# f.speechlinks is a function for extracting links from the list of speeches.
inaug=f.speechlinks(main.page)
#head(inaug)
as.Date(inaug[,1], format="%B %e, %Y")
inaug=inaug[-nrow(inaug),] # remove the last line, irrelevant due to error.
#### Nomination speeches
main.page=read_html("http://www.presidency.ucsb.edu/nomination.php")
# Get link URLs
nomin <- f.speechlinks(main.page)
#head(nomin)
#
#### Farewell speeches
main.page=read_html("http://www.presidency.ucsb.edu/farewell_addresses.php")
# Get link URLs
farewell <- f.speechlinks(main.page)
#head(farewell)
inaug.list=read.csv("../data/inauglist.csv", stringsAsFactors = FALSE)
nomin.list=read.csv("../data/nominlist.csv", stringsAsFactors = FALSE)
farewell.list=read.csv("../data/farewelllist.csv", stringsAsFactors = FALSE)
speech.list=rbind(inaug.list, nomin.list, farewell.list)
speech.list$type=c(rep("inaug", nrow(inaug.list)),
rep("nomin", nrow(nomin.list)),
rep("farewell", nrow(farewell.list)))
speech.url=rbind(inaug, nomin, farewell)
speech.list=cbind(speech.list, speech.url)
# Loop over each row in speech.list
speech.list$fulltext=NA
for(i in seq(nrow(speech.list))) {
text <- read_html(speech.list$urls[i]) %>% # load the page
html_nodes(".displaytext") %>% # isloate the text
html_text() # get the text
speech.list$fulltext[i]=text
# Create the file name
filename <- paste0("../data/fulltext/",
speech.list$type[i],
speech.list$File[i], "-",
speech.list$Term[i], ".txt")
sink(file = filename) %>% # open file to write
cat(text)  # write the file
sink() # close the file
}
sentence.list=NULL
for(i in 1:nrow(speech.list)){
sentences=sent_detect(speech.list$fulltext[i],
endmarks = c("?", ".", "!", "|",";"))
if(length(sentences)>0){
emotions=get_nrc_sentiment(sentences)
word.count=word_count(sentences)
# colnames(emotions)=paste0("emo.", colnames(emotions))
# in case the word counts are zeros?
emotions=diag(1/(word.count+0.01))%*%as.matrix(emotions)
sentence.list=rbind(sentence.list,
cbind(speech.list[i,-ncol(speech.list)],
sentences=as.character(sentences),
word.count,
emotions,
sent.id=1:length(sentences)
)
)
}
}
sentence.list=
sentence.list%>%
filter(!is.na(word.count))
sel.comparison=c("HarrySTruman","FranklinDRoosevelt","HerbertHoover","WoodrowWilson","WarrenGHarding")
sentence.list.sel=sentence.list%>%filter(type=="inaug", File%in%sel.comparison, Term==1)
sentence.list.sel$File=factor(sentence.list.sel$File)
sentence.list.sel$FileOrdered=reorder(sentence.list.sel$File,
sentence.list.sel$word.count,
mean,
order=T)
beeswarm(word.count~FileOrdered,
data=sentence.list.sel,
horizontal = TRUE,
pch=16, col=alpha(brewer.pal(9, "Set1"), 0.6),
cex=0.55, cex.axis=0.8, cex.lab=0.8,
spacing=5/nlevels(sentence.list.sel$FileOrdered),
las=2, ylab="", xlab="Number of words in a sentence.",
main="Inaugural Speeches")
f.plotsent.len(In.list=sentence.list, InFile="WoodrowWilson",
InType="nomin", InTerm=1, President="WoodrowWilson")
f.plotsent.len(In.list=sentence.list, InFile="WarrenGHarding",
InType="nomin", InTerm=1, President="WarrenGHarding")
f.plotsent.len(In.list=sentence.list, InFile="HerbertHoover",
InType="nomin", InTerm=1, President="HerbertHoover")
f.plotsent.len(In.list=sentence.list, InFile="FranklinDRoosevelt",
InType="nomin", InTerm=1, President="FranklinDRoosevelt")
f.plotsent.len(In.list=sentence.list, InFile="HarrySTruman",
InType="nomin", InTerm=1, President="HarrySTruman")
heatmap.2(cor(sentence.list%>%filter(type=="inaug")%>%select(anger:trust)),
scale = "none",
col = bluered(100), , margin=c(6, 6), key=F,
trace = "none", density.info = "none")
par(mar=c(4, 6, 2, 1))
emo.means=colMeans(select(sentence.list, anger:trust)>0.01)
col.use=c("red2", "darkgoldenrod1",
"chartreuse3", "blueviolet",
"darkgoldenrod2", "dodgerblue3",
"darkgoldenrod1", "darkgoldenrod1")
barplot(emo.means[order(emo.means)], las=2, col=col.use[order(emo.means)], horiz=T, main="Inaugural Speeches")
f.plotsent.len(In.list=sentence.list, InFile="WoodrowWilson",
InType="nomin", InTerm=1, President="WoodrowWilson")
f.plotsent.len(In.list=sentence.list, InFile="WarrenGHarding",
InType="nomin", InTerm=1, President="WarrenGHarding")
f.plotsent.len(In.list=sentence.list, InFile="HerbertHoover",
InType="nomin", InTerm=1, President="HerbertHoover")
f.plotsent.len(In.list=sentence.list, InFile="FranklinDRoosevelt",
InType="nomin", InTerm=1, President="FranklinDRoosevelt")
f.plotsent.len(In.list=sentence.list, InFile="HarrySTruman",
InType="nomin", InTerm=1, President="HarrySTruman")
presid.summary=tbl_df(sentence.list)%>%
filter(type=="nomin", File%in%sel.comparison)%>%
#group_by(paste0(type, File))%>%
group_by(File)%>%
summarise(
anger=mean(anger),
anticipation=mean(anticipation),
disgust=mean(disgust),
fear=mean(fear),
joy=mean(joy),
sadness=mean(sadness),
surprise=mean(surprise),
trust=mean(trust)
#negative=mean(negative),
#positive=mean(positive)
)
presid.summary=as.data.frame(presid.summary)
rownames(presid.summary)=as.character((presid.summary[,1]))
km.res=kmeans(presid.summary[,-1], iter.max=200,
3)
fviz_cluster(km.res,
stand=F, repel= TRUE,
data = presid.summary[,-1], xlab="", xaxt="n",
show.clust.cent=FALSE)
presid.summary=tbl_df(sentence.list)%>%
filter(type=="nomin", File%in%sel.comparison)%>%
#group_by(paste0(type, File))%>%
group_by(File)%>%
summarise(
anger=mean(anger),
anticipation=mean(anticipation),
disgust=mean(disgust),
fear=mean(fear),
joy=mean(joy),
sadness=mean(sadness),
surprise=mean(surprise),
trust=mean(trust)
#negative=mean(negative),
#positive=mean(positive)
)
presid.summary=as.data.frame(presid.summary)
rownames(presid.summary)=as.character((presid.summary[,1]))
km.res=kmeans(presid.summary[,-1], iter.max=200,
3)
fviz_cluster(km.res,
stand=F, repel= TRUE,
data = presid.summary[,-1], xlab="", xaxt="n",
show.clust.cent=FALSE)
f.plotsent.len(In.list=sentence.list, InFile="WoodrowWilson",
InType="nomin", InTerm=1, President="WoodrowWilson")
f.plotsent.len(In.list=sentence.list, InFile="WoodrowWilson",
InType="nomin", InTerm=1, President="WoodrowWilson")
f.plotsent.len(In.list=sentence.list, InFile="WarrenGHarding",
InType="nomin", InTerm=1, President="WarrenGHarding")
f.plotsent.len(In.list=sentence.list, InFile="HerbertHoover",
InType="nomin", InTerm=1, President="HerbertHoover")
f.plotsent.len(In.list=sentence.list, InFile="FranklinDRoosevelt",
InType="nomin", InTerm=1, President="FranklinDRoosevelt")
f.plotsent.len(In.list=sentence.list, InFile="HarrySTruman",
InType="nomin", InTerm=1, President="HarrySTruman")
f.plotsent.len(In.list=sentence.list, InFile="FranklinDRoosevelt",
InType="nomin", InTerm=1, President="FranklinDRoosevelt")
f.plotsent.len(In.list=sentence.list, InFile="WoodrowWilson",
InType="nomin", InTerm=1, President="WoodrowWilson")
f.plotsent.len(In.list=sentence.list, InFile="WoodrowWilson",
InType="nomin", InTerm=1, President="WoodrowWilson")
f.plotsent.len(In.list=sentence.list, InFile="WarrenGHarding",
InType="nomin", InTerm=1, President="WarrenGHarding")
f.plotsent.len(In.list=sentence.list, InFile="HerbertHoover",
InType="nomin", InTerm=1, President="HerbertHoover")
f.plotsent.len(In.list=sentence.list, InFile="FranklinDRoosevelt",
InType="nomin", InTerm=1, President="FranklinDRoosevelt")
f.plotsent.len(In.list=sentence.list, InFile="HarrySTruman",
InType="nomin", InTerm=1, President="HarrySTruman")
f.plotsent.len(In.list=sentence.list, InFile="WoodrowWilson",
InType="nomin", InTerm=1, President="WoodrowWilson")
f.plotsent.len(In.list=sentence.list, InFile="WarrenGHarding",
InType="nomin", InTerm=1, President="WarrenGHarding")
f.plotsent.len(In.list=sentence.list, InFile="WarrenGHarding",
InType="nomin", InTerm=1, President="WarrenGHarding")
f.plotsent.len(In.list=sentence.list, InFile="HerbertHoover",
InType="nomin", InTerm=1, President="HerbertHoover")
f.plotsent.len(In.list=sentence.list, InFile="FranklinDRoosevelt",
InType="nomin", InTerm=1, President="FranklinDRoosevelt")
f.plotsent.len(In.list=sentence.list, InFile="HarrySTruman",
InType="nomin", InTerm=1, President="HarrySTruman")
f.plotsent.len(In.list=sentence.list, InFile="FranklinDRoosevelt",
InType="nomin", InTerm=1, President="FranklinDRoosevelt")
f.plotsent.len(In.list=sentence.list, InFile="HerbertHoover",
InType="nomin", InTerm=1, President="HerbertHoover")
f.plotsent.len(In.list=sentence.list, InFile="FranklinDRoosevelt",
InType="nomin", InTerm=1, President="FranklinDRoosevelt")
f.plotsent.len(In.list=sentence.list, InFile="HerbertHoover",
InType="nomin", InTerm=1, President="HerbertHoover")
f.plotsent.len(In.list=sentence.list, InFile="WarrenGHarding",
InType="nomin", InTerm=1, President="WarrenGHarding")
f.plotsent.len(In.list=sentence.list, InFile="WoodrowWilson",
InType="nomin", InTerm=1, President="WoodrowWilson")
presid.summary=tbl_df(sentence.list)%>%
filter(type=="nomin", File%in%sel.comparison)%>%
#group_by(paste0(type, File))%>%
group_by(File)%>%
summarise(
anger=mean(anger),
anticipation=mean(anticipation),
disgust=mean(disgust),
fear=mean(fear),
joy=mean(joy),
sadness=mean(sadness),
surprise=mean(surprise),
trust=mean(trust)
#negative=mean(negative),
#positive=mean(positive)
)
presid.summary=as.data.frame(presid.summary)
rownames(presid.summary)=as.character((presid.summary[,1]))
km.res=kmeans(presid.summary[,-1], iter.max=200,
3)
fviz_cluster(km.res,
stand=F, repel= TRUE,
data = presid.summary[,-1], xlab="", xaxt="n",
show.clust.cent=FALSE)
library(tm)
library(wordcloud)
library(RColorBrewer)
library(dplyr)
library(tidytext)
par(mar=c(3,2,2,2))
f.plotsent.len(In.list=sentence.list, InFile="WoodrowWilson",
InType="nomin", InTerm=1, President="WoodrowWilson")
f.plotsent.len(In.list=sentence.list, InFile="WoodrowWilson",
InType="nomin", InTerm=1, President="WoodrowWilson")
f.plotsent.len(In.list=sentence.list, InFile="WarrenGHarding",
InType="nomin", InTerm=1, President="WarrenGHarding")
f.plotsent.len(In.list=sentence.list, InFile="WarrenGHarding",
InType="nomin", InTerm=1, President="WarrenGHarding")
f.plotsent.len(In.list=sentence.list, InFile="HerbertHoover",
InType="nomin", InTerm=1, President="HerbertHoover")
f.plotsent.len(In.list=sentence.list, InFile="HerbertHoover",
InType="nomin", InTerm=1, President="HerbertHoover")
f.plotsent.len(In.list=sentence.list, InFile="FranklinDRoosevelt",
InType="nomin", InTerm=1, President="FranklinDRoosevelt")
f.plotsent.len(In.list=sentence.list, InFile="HarrySTruman",
InType="nomin", InTerm=1, President="HarrySTruman")
library(tm)
library(wordcloud)
library(RColorBrewer)
library(dplyr)
library(tidytext)
folder.path="../data/InauguralSpeeches/"
speeches=list.files(path = folder.path, pattern = "*.txt")
prex.out=substr(speeches, 6, nchar(speeches)-4)
ff.all<-Corpus(DirSource(folder.path,encoding = "UTF-8"))
ff.all<-tm_map(ff.all, stripWhitespace)
ff.all<-tm_map(ff.all, content_transformer(tolower))
ff.all<-tm_map(ff.all, removeWords, stopwords("english"))
ff.all<-tm_map(ff.all, removeWords, character(0))
ff.all<-tm_map(ff.all, removePunctuation)
tdm.all<-TermDocumentMatrix(ff.all)
tdm.tidy=tidy(tdm.all)
tdm.overall=summarise(group_by(tdm.tidy, term), sum(count))
dtm <- DocumentTermMatrix(ff.all,
control = list(weighting = function(x)
weightTfIdf(x,
normalize =FALSE),
stopwords = TRUE))
ff.dtm=tidy(dtm)
library(shiny)
shinyApp(
ui = fluidPage(
fluidRow(style = "padding-bottom: 20px;",
column(4, selectInput('speech1', 'Speech 1',
speeches,
selected=speeches[5])),
column(4, selectInput('speech2', 'Speech 2', speeches,
selected=speeches[9])),
column(4, sliderInput('nwords', 'Number of words', 3,
min = 20, max = 200, value=100, step = 20))
),
fluidRow(
plotOutput('wordclouds', height = "400px")
)
),
server = function(input, output, session) {
# Combine the selected variables into a new data frame
selectedData <- reactive({
list(dtm.term1=ff.dtm$term[ff.dtm$document==as.character(input$speech1)],
dtm.count1=ff.dtm$count[ff.dtm$document==as.character(input$speech1)],
dtm.term2=ff.dtm$term[ff.dtm$document==as.character(input$speech2)],
dtm.count2=ff.dtm$count[ff.dtm$document==as.character(input$speech2)])
})
output$wordclouds <- renderPlot(height = 400, {
par(mfrow=c(1,2), mar = c(0, 0, 3, 0))
wordcloud(selectedData()$dtm.term1,
selectedData()$dtm.count1,
scale=c(4,0.5),
max.words=input$nwords,
min.freq=1,
random.order=FALSE,
rot.per=0,
use.r.layout=FALSE,
random.color=FALSE,
colors=brewer.pal(10,"Blues"),
main=input$speech1)
wordcloud(selectedData()$dtm.term2,
selectedData()$dtm.count2,
scale=c(4,0.5),
max.words=input$nwords,
min.freq=1,
random.order=FALSE,
rot.per=0,
use.r.layout=FALSE,
random.color=FALSE,
colors=brewer.pal(10,"Blues"),
main=input$speech2)
})
},
options = list(height = 600)
)
